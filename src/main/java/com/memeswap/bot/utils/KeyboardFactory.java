package com.memeswap.bot.utils;

import com.memeswap.bot.UserSession;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow;

import java.util.List;

public class KeyboardFactory {
    public static ReplyKeyboardMarkup getMainMenuKeyboard() {
        ReplyKeyboardMarkup markup = new ReplyKeyboardMarkup();
        markup.setResizeKeyboard(true);
        markup.setOneTimeKeyboard(false);

        KeyboardRow row1 = new KeyboardRow();
        row1.add("üñºÔ∏è –ó–∞–≥—Ä—É–∑–∏—Ç—å –º–µ–º");
        row1.add("üìú –õ–µ–Ω—Ç–∞ –º–µ–º–æ–≤");

        KeyboardRow row2 = new KeyboardRow();
        row2.add("üë§ –ü—Ä–æ—Ñ–∏–ª—å");
        row2.add("üìÇ –ú–æ–∏ –º–µ–º—ã");
        row2.add("‚≠ê –ò–∑–±—Ä–∞–Ω–Ω–æ–µ");

        markup.setKeyboard(List.of(row1, row2));
        return markup;
    }

    public static ReplyKeyboardMarkup getMemeMenuKeyboard(UserSession.FeedType feedType) {
        ReplyKeyboardMarkup markup = new ReplyKeyboardMarkup();
        markup.setResizeKeyboard(true);
        markup.setOneTimeKeyboard(false);

        KeyboardRow row1 = new KeyboardRow();
        row1.add("‚¨ÖÔ∏è –ù–∞–∑–∞–¥");
        row1.add("‚û°Ô∏è –í–ø–µ—Ä–µ–¥");

        KeyboardRow row2 = new KeyboardRow();
        switch (feedType) {
            case MAIN -> {
                row2.add("‚ù§Ô∏è –õ–∞–π–∫");
                row2.add("üö© –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è");
            }
            case USER, FAVORITES -> {}
            case AUTHOR -> {} // –ü—É—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è AUTHOR
        }

        KeyboardRow row3 = new KeyboardRow();
        row3.add("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é");

        markup.setKeyboard(List.of(row1, row2, row3));
        return markup;
    }
}